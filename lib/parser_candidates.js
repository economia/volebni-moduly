// Generated by LiveScript 1.2.0
(function(){
  var xml2js, computePreferentialVotes, getCandidateId;
  xml2js = require('xml2js');
  module.exports.parse = function(csvString, preferentialVotesString, cb){
    var this$ = this;
    return computePreferentialVotes(preferentialVotesString, function(err, preferentialVotesAssoc){
      var lines, list;
      if (err) {
        cb(err);
      }
      lines = csvString.split("\n");
      lines.shift();
      list = lines.filter(function(it){
        return it.length;
      }).map(function(line){
        var ref$, countyId, partyId, rank, name, surname, title1, title2, id, votes;
        ref$ = line.split(";"), countyId = ref$[0], partyId = ref$[1], rank = ref$[2], name = ref$[3], surname = ref$[4], title1 = ref$[5], title2 = ref$[6];
        countyId = +countyId;
        partyId = +partyId;
        rank = +rank;
        id = getCandidateId(countyId, partyId, rank);
        votes = +preferentialVotesAssoc[id];
        return {
          countyId: countyId,
          partyId: partyId,
          rank: rank,
          name: name,
          surname: surname,
          title1: title1,
          title2: title2,
          votes: votes
        };
      }).sort(function(a, b){
        var that;
        switch (false) {
        case !(that = a.countyId - b.countyId):
          return that;
        case !(that = a.partyId - b.partyId):
          return that;
        default:
          return a.rank - b.rank;
        }
      });
      return cb(null, list);
    });
  };
  computePreferentialVotes = function(preferentialVotesString, cb){
    var this$ = this;
    return xml2js.parseString(preferentialVotesString, function(err, xml){
      var preferentialVotesAssoc;
      preferentialVotesAssoc = {};
      xml.VYSLEDKY_KANDID.KRAJ.forEach(function(county){
        var countyId;
        countyId = +county.$.CIS_KRAJ;
        return county.KANDIDATI[0].KANDIDAT.forEach(function(candidate){
          var partyId, rank, votes, id;
          partyId = +candidate.$.KSTRANA;
          rank = +candidate.$.PORCISLO;
          votes = +candidate.$.HLASY;
          id = getCandidateId(countyId, partyId, rank);
          return preferentialVotesAssoc[id] = votes;
        });
      });
      return cb(null, preferentialVotesAssoc);
    });
  };
  getCandidateId = function(countyId, partyId, rank){
    return countyId + "-" + partyId + "-" + rank;
  };
}).call(this);
